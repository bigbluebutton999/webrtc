participant Alice's Turn as TurnA
participant Alice's Browser as A
participant Alice's App as AppA
participant Alice as Alice
participant Web Server Browse as Web
participant Bob as Bob
participant Bob's App as AppB
participant Bob's Browse as B
participant Bob's Turn as TurnB
A <-> Web: Load Page 
A <-> Web: Authenticate
AppA -> A: create PeerConnection()
A -> TurnA: Alloc
TurnA -> A: 
B <-> Web: Load Page 
B <-> Web: Authenticate
AppB -> B: create PeerConnection()
B -> TurnB: Alloc
TurnB -> B: 
Alice -> AppA: Call Bob 
AppA -> A: addStream( data )
AppA -> A: addStream( audio/video )
AppA -> A: createOffer
A -> AppA: offer
AppA -> A: setLocal
AppA -> Web: Offer to Bob
Web -> AppB: Offer
AppB -> B: SetRemote 
B -> AppB: TBD Remote has audio, video, and data 
AppB -> Bob: Phones Ringing Dude
AppB -> B: addStream( data )
AppB -> B: createAnswer( Provisional, RelayOnly )
B -> AppB: PR_Answer
AppB -> B: setLocal
sendPrAns: AppB -> Web: PR_Answer to Alice 
B@sendPrAns -> TurnB: Perm
B -> AppB: onRemoteStream( data )
B <-> TurnB: ICE Check
TurnB <-> A: ICE Check 
B <-> TurnB: DTLS
TurnB <-> A: DTLS
B <-> TurnB: SCTP/Data
TurnB <-> A: SCTP/Data
A -> AppA: onRemoteStream( data )
Web@sendPrAns -> AppA: PR_Answer [duration=8]
AppA -> A: setRemote
A -> TurnA: Perm
Bob -> AppB: Accept Audio and Video 
AppB -> B: addStream( audio/video )
AppB -> B: createAnswer
B -> AppB: Answer 
AppB -> B: setLocal
sendAns:AppB -> Web: Answer to Alice
B -> AppB: onRemoteStream( audio/video )
B <-> TurnB: RTP/Data
TurnB <-> A: RTP/Data
B <-> A: ICE Check
B <-> A: RTP/Data
Web@sendAns -> AppA: Answer [duration=6]
AppA -> A: setRemote 

