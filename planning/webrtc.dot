digraph G {
ranksep=.75; size = "7.5,7.5";
{
node [shape=plaintext, fontsize=16]; /* the time-line graph */ 
     "April 6" -> "April 13"-> "April 20"-> "April 27"-> "May 4"-> "May 11"-> "May 18"-> "May 25"-> "June 1"-> "June 8"-> "June 15"-> "June 22"-> "June 29"-> "July 6"-> "July 13"-> "July 20"-> "July 27"
}

	{rank = same; "April 27";
	   webrtc [label = "base WebRTC landed on m-c - Randell"];
	   mediastream [label = "MediaStream landed on m-c - ROC"];
	   genericio [label = "Generic Networking abstraction - EKR"]
	   dtlssrtp [label = "DTLS-SRTP (NSS) landed (where?) - EKR"]
	   opussrc [label = "Opus source landed on m-c - Rillian"]
        }

	{rank = same; "May 11";
	   getusermedia [label = "getUserMedia - Anant"]
	   dtlstransport [label = "DTLS Transport - EKR" ];
	   sctpupdate [label = "Clean up SCTP API - Randell w/ SCTP Authors"];
	   sipccsdp [ label = "Start SIPCC in SDP Mode - Enda"];
	}
	dtlssrtp -> dtlstransport
	genericio -> dtlstransport
	
	{rank = same; "May 25";
	   nicer [label = "Import nICEr - EKR"];
	   nrappkit [label = "Import nrappkit - EKR"];
	   sipccsetdesc [ label = "setLocalDesc/setRemoteDesc in SIPCC - Enda"];
	   datachannelupdate [label = "Update DataChannel impl - Randell"];
	   opuswebrtc [label = "Opus patches for WebRTC.org - Rillian"];
           sipccmediaconstraints [ label = "Add Media Constraints API to SIPCC - Enda"];
        }	   	   
	nrappkit -> nicer
        sipccsdp -> sipccmediaconstraints
        sipccsdp -> sipccsetdesc

	{rank = same; "June 1";
	   sctpio [ label = "Abstract SCTP I/O - EKR w/ SCTP Authors"]
	   opus [ label = "Functional Opus calls - Rillian"];
           sipccsetmediainterface [label ="Abstract mediastream interface to SIPCC - Suhas & Enda"];
           sipccjsep [ label = "JSEP createOffer/createAnswer in SIPCC - Enda"];
        }
	getusermedia -> peerconnection_first
	opussrc -> opus
	opuswebrtc -> opus
        sipccmediaconstraints -> sipccjsep
        sipccsetdesc -> sipccsetmediainterface

	{rank = same; "June 8";
	   icetransport [ label = "ICE Transport - EKR"];
	   dtlsfingerprint [ label = "DTLS Fingerprint\n(SDP) - EKR & Enda"];
	   iceparams [label = "ICE (SDP) - EKR & Enda"];
           sipccusemediastreams [label = "SIPCC using media streams - Suhas & Enda"];
	}

	nicer -> icetransport
        sipccjsep -> sipccusemediastreams
        sipccsetmediainterface -> sipccusemediastreams
	genericio -> icetransport
	iceparams -> icetransport

	{rank = same; "June 15";
	   transport [label = "Transport Service - EKR"];
	   sctp [label = "SCTP - Randell"];
	   sipccrefactor [label = "SIPCC refactored (milestone) - Maire"];
           sipccmultipeerconn [label = "SIPCC handles multiple PeerConnections - Enda"]
	   peerconnection_first [label = "partial PeerConnection - Randell"];
	 } 
	 sipccusemediastreams -> sipccrefactor
	 sipccrefactor -> "JSEP"
	 dtlstransport -> transport
	 icetransport -> transport
	 sipccusemediastreams -> peerconnection_first

        {rank = same; "June 22"; 
	   JSEP [ label = "JSEP working - Enda & Ethan"]; }

        {rank = same; "June 29"; 
	   peerconnection [label = "PeerConnection API - Randell"];
	   datachannel [label = "Full DataChannel - Randell"];
	   srtp [label = "SRTP (with DTLS) - EKR"] }
        dtlsfingerprint -> srtp
	dtlssrtp -> srtp
	sipccrefactor -> srtp
        sipccmultipeerconn -> peerconnection

        {rank = same; "July 13"; 
	   working [ label = "Working System (milestone) - Maire" ] }
	
        mediastream->getusermedia
	webrtc->getusermedia
	
	transport -> working
	transport -> datachannel
	peerconnection_first -> peerconnection
	peerconnection -> working
	"JSEP" -> peerconnection
	sctpio-> sctp
	sctpupdate -> sctp
	sctpupdate -> datachannelupdate
	datachannelupdate -> datachannel
	sctp -> datachannel
	transport ->sctp
	datachannel -> working
	srtp -> working

	opus -> working
}
