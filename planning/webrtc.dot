digraph G {
labelloc="b";
fontsize=30;
style=bold;
label="Note: a “bubble” or object turns green when implementation is completed; in most cases this means when it lands on Alder"

ranksep=.75; size = "7.5,7.5";
{
node [shape=plaintext, fontsize=16]; /* the time-line graph */ 
     "April 30"-> "May 4"-> "May 11"-> "May 18"-> "May 25"-> "June 1"-> "June 8"-> "June 15"-> "June 22"-> "June 29"-> "July 6"-> "July 13"-> "July 20"-> "July 27"
}

	{rank = same; "April 30";
	   mediastream [label = "MediaStream landed on m-c\nROC\nDone" color=green];
        }
        
        {
           rank = same; "May 4";
	   genericio [label = "Generic Networking abstraction\nEKR", color=green]
	   dtlssrtp [label = "DTLS-SRTP (NSS) landed (where?)\nEKR" color=green]
        }

	{rank = same; "May 11";
	   opussrc [label = "Opus source landed on m-c\nRillian\nDone" color = green]
	   dtlstransport [label = "DTLS Transport\nEKR"  color=green];
	}
        mediastream->getusermedia
	dtlssrtp -> dtlstransport
	genericio -> dtlstransport

	{rank = same; "May 18";
	}
	
	{rank = same; "May 25";
	   getusermedia_abstract [label = "getUserMedia abstraction\nAnant" color=green]
	   nicer [label = "Import ICE stack\nEKR", color=green];
	   sipccsdp [ label = "Start SIPCC quickly in SDP Mode\nEnda" color=green];
        }	   	   
	getusermedia_abstract->getusermedia_DOM
	getusermedia_abstract->getusermedia
	webrtc->peerconnection_first

	{rank = same; "June 1";
	   sctpupdate [label = "Clean up SCTP API\nRandell w/ SCTP Authors" color=green];
	   datachannelupdate [label = "Update DataChannel impl\nRandell" color=green];
	   getusermedia [label = "getUserMedia backend\nSuhas" color=green]
	   getusermedia_DOM [label = "getUserMedia DOM on m-c\nAnant" color=green]
        }
	getusermedia -> peerconnection_first
	getusermedia_DOM -> peerconnection_first

	{rank = same; "June 8";
	   icetransport [ label = "ICE Transport\nEKR", color=green];
	   dtlsfingerprint [ label = "DTLS Fingerprint\n(SDP)\nEKR & Suhas"];
	   iceparams [label = "ICE (SDP)\nEKR & Suhas", color=green];
           sipccjsep [ label = "JSEP calls without MediaStream input in SIPCC\nEnda"];
	}

	nicer -> icetransport
	genericio -> icetransport
	iceparams -> icetransport
        sipccsdp -> sipccjsep

	{rank = same; "June 15";
	   webrtc [label = "base WebRTC landed on m-c\nRandell" color=green];
	   transport [label = "Transport Service\nEKR", color=green];
	} 
	mediastream -> webrtc;
	getusermedia_DOM -> constraints;
	getusermedia -> constraints;
	dtlstransport -> transport
	icetransport -> transport
	sipccjsep -> sipccjsepmediastreams
	getusermedia -> sipccmediaengine
        sipccsdp -> sipccmediaengine

        {rank = same; "June 22"; 
           sipccjsepmediastreams [label = "JSEP using MediaStreams in SIPCC\nEnda"];
           sipccmediaengine [label = "Media Engine Interface available from MediaStream\nSuhas"];
          opuswebrtc [label = "Opus patches for WebRTC.org\nRillian"];
          getusermedia_video [label = "getUserMedia w/ video\nSuhas"]
	   sctpio [ label = "Abstract SCTP I/O\nEKR w/ SCTP Authors"]
        }
	sipccjsepmediastreams -> JSEP
	sipccmediaengine -> JSEP
        sipccjsepmediastreams -> sipccmultipeerconn
	constraints -> sipccmediaconstraints
	getusermedia_DOM -> getusermedia_video
	webrtc -> getusermedia_video

        {rank = same; "June 29"; 
	  JSEP [ label = "JSEP working\nEthan\nRollup bugfix"]; 
          sctp_library [label = "libsctp\nRandell"];
          sipccmultipeerconn [label = "SIPCC handles multiple PeerConnections\nEthan"];
	   opus [ label = "Functional Opus calls\nRillian"];
	}

        {rank = same; "July 6"; 
	   datachannel [label = "Full DataChannel\nRandell"];
	   peerconnection_first [label = "partial PeerConnection\nEnda/Randell"];
	   sipccrefactor [label = "SIPCC refactored (milestone)\nMaire"];
	}

        dtlsfingerprint -> srtp
	dtlssrtp -> srtp
	JSEP -> srtp
	JSEP -> peerconnection_first
        JSEP -> sipccrefactor
	opussrc -> opus
	opuswebrtc -> opus

        {rank = same; "July 13"; 
	   srtp [label = "SRTP (with DTLS)\nEKR"] 
	   peerconnection [label = "PeerConnection API\nEnda/Randell"];
	}
	peerconnection_first -> peerconnection
        sipccmultipeerconn -> peerconnection

        {rank = same; "July 20"; 
	   constraints [label = "Constraints API\nAnant/Suhas"];
	   working [ label = "Working System (milestone)\nMaire" ] 
	}

        {rank = same; "July 27"; 
          sipccmediaconstraints [ label = "Add Media Constraints to SIPCC\nSuhas"]; 
	}

	transport -> working
	transport -> datachannel
	peerconnection -> working
	sctpio-> sctp_library
	sctpupdate -> sctp_library
	sctpupdate -> datachannelupdate
	datachannelupdate -> datachannel
	sctp_library -> datachannel
	transport -> sctp_library
	datachannel -> working
	srtp -> working
	opus -> working
	sipccrefactor -> working
	getusermedia_video -> working

}
